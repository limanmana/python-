# 作用域

## 1.块级作用域
# if 1==1:
#     name = '小明'
# print(name)
#
#
# for i in range(10):
#     age = i
# print(age)
# 在语句块中声明的变量，最好在同一级下进行操作。如果在语句块外引用变量，python并不会报错。但是在其他java/c#是会报错的。

# total = 0
# for i in range(1,101):
#     total += i
#     print(total)

# if  for 语句块都可以调用外层声明过的变量
# （不推荐）外层访问内层
# 外层先声明，内层在访问：if for 语句块都可以调用外层声明过的变量。同一级代码可以访问同一级之前声明过的变量。



## 2. 局部作用域

# def foo():
#     name = '小明'
#
# print(name)  #不可以直接引用变量，不在同一级

# 外部变量： 函数之外的变量。
# 局部变量local variable: 函数内定义变量。
# 局部变量作用域： 函数内。外部直接调用内部变量会报错。函数内按块级作用域判断。
# 函数变量作用域：声明这个局部变量的函数内。 不同函数之间不能互相调用各自的局部变量。不同函数的变量相互隔离。


# 3.作用域链
# name = '小明'
# def f1():
#     name = '小李'
#     def f2():
#         name = '小红'
#         print(name)
#     f2()
# f1()
# 作用域嵌套；例如上例全局套着函数1，函数1套着函数2.调用变量时会发现在当前函数作用域中查找，如果找不到的话会去上一级函数作用域中查找。
# 平时代码应该避免函数复杂，嵌套，变量作用域把握不准时声明不同名字的变量。

# 练习
name = '小明'

def f1():
    print(name)
def f2():
     name='小红'
     f1()
f2()



# 作用域范围从小到大：内部局部<外层局部<全局<内置全局





